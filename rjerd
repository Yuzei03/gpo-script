-- Initialization

local cloneref = cloneref or function(...) return ... end

local Players = cloneref(game:GetService("Players"))

local lp = Players.LocalPlayer

local flying = false

local bv, bav

local buttons = {W = false, S = false, A = false, D = false, Moving = false}

local function StartFly()
    if not lp.Character then return end

    local c = lp.Character
    local h = c:FindFirstChildOfClass("Humanoid")

    if not h or flying then return end

    h.PlatformStand = true

    local cam = workspace.CurrentCamera

    bv = Instance.new("BodyVelocity")
    bav = Instance.new("BodyAngularVelocity")

    bv.Velocity, bv.MaxForce, bv.P = Vector3.new(0, 0, 0), Vector3.new(10000, 10000, 10000), 1000
    bav.AngularVelocity, bav.MaxTorque, bav.P = Vector3.new(0, 0, 0), Vector3.new(10000, 10000, 10000), 1000

    bv.Parent = c.Head
    bav.Parent = c.Head

    flying = true
end

local function EndFly()
    if bv then bv:Destroy() end
    if bav then bav:Destroy() end

    local c = lp.Character
    local h = c and c:FindFirstChildOfClass("Humanoid")

    if h then h.PlatformStand = false end

    flying = false
end

-- Add a TextButton to toggle fly mode
local FlyButton = Instance.new("TextButton")
FlyButton.Name = "FlyButton"
FlyButton.Size = UDim2.new(0, 100, 0, 30)
FlyButton.Position = UDim2.new(0.5, -50, 0.5, -15)
FlyButton.Text = "F To Fly"
FlyButton.Parent = lp:WaitForChild("PlayerGui")

FlyButton.MouseButton1Click:Connect(function()
    if flying then
        EndFly()
    else
        StartFly()
    end
end)

game:GetService("UserInputService").InputBegan:connect(function(input, GPE)
    if GPE then return end

    if input.KeyCode == Enum.KeyCode.F then
        if flying then
            EndFly()
        else
            StartFly()
        end
    else
        for i, e in pairs(buttons) do
            if i ~= "Moving" and input.KeyCode == Enum.KeyCode[i] then
                buttons[i] = true
                buttons.Moving = true
            end
        end
    end
end)

game:GetService("UserInputService").InputEnded:connect(function(input, GPE)
    if GPE then return end

    local a = false
    for i, e in pairs(buttons) do
        if i ~= "Moving" then
            if input.KeyCode == Enum.KeyCode[i] then
                buttons[i] = false
            end
            if buttons[i] then a = true end
        end
    end
    buttons.Moving = a
end)

local function setVec(vec)
    return vec * ((getgenv().FlySpeed or 50) / vec.Magnitude)
end

game:GetService("RunService").Heartbeat:connect(function(step)
    local c = cloneref(lp.Character)
    if flying and c and c.PrimaryPart then
        local p = c.PrimaryPart.Position
        local cf = workspace.CurrentCamera.CFrame
        local ax, ay, az = cf:toEulerAnglesXYZ()
        c:SetPrimaryPartCFrame(CFrame.new(p.x, p.y, p.z) * CFrame.Angles(ax, ay, az))
        if buttons.Moving then
            local t = Vector3.new()
            if buttons.W then t = t + (setVec(cf.lookVector)) end
            if buttons.S then t = t - (setVec(cf.lookVector)) end
            if buttons.A then t = t - (setVec(cf.rightVector)) end
            if buttons.D then t = t + (setVec(cf.rightVector)) end
            c:TranslateBy(t * step)
        end
    end
end)

-- Load Linoria library and addons

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/Library.lua"))()

local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/ThemeManager.lua"))()

local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/SaveManager.lua"))()

-- Create the main window

local Window = Library:CreateWindow({
    Title = 'GPO BR',
    Center = true,
    AutoShow = true,
})

-- Create a tab named "GPO BR"

local GPOTab = Window:AddTab('GPO BR')

-- Add a tabbox for speed settings within the "GPO BR" tab

local SpeedTabbox = GPOTab:AddLeftTabbox('Speed')

-- Add a tab to the tabbox for speed settings

local SpeedTab = SpeedTabbox:AddTab('Speed Settings')

-- Add a textbox to enter speed

local SpeedInput = SpeedTab:AddInput('SpeedInput', {
    Default = '16',
    Numeric = true,
    Finished = false,
    Text = 'Enter Speed',
    Tooltip = 'Set your character speed',
})

-- Add a button to apply speed

SpeedTab:AddButton('Apply Speed', function()
    local speed = SpeedInput.Value
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = tonumber(speed)
    -- Persist the speed in a global variable
    _G.WalkSpeed = tonumber(speed)
end)

-- Create a small button to show the GUI when it's hidden

local ShowButton

-- Function to hide the main GUI and show the small button

local function hideMainGUI()
    Library:Unload()
    if not ShowButton then
        ShowButton = Instance.new("TextButton")
        ShowButton.Size = UDim2.new(0, 100, 0, 30)
        ShowButton.Position = UDim2.new(0, 10, 0, 10)
        ShowButton.Text = "Show GUI"
        ShowButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        ShowButton.MouseButton1Click:Connect(function()
            ShowButton:Destroy()
            ShowButton = nil
            loadstring(game:HttpGet('https://raw.githubusercontent.com/your-username/your-repo/main/your-script.lua'))()
        end)
    end
end

-- Add a button to hide the GUI

SpeedTab:AddButton('Hide GUI', hideMainGUI)

-- Add a tabbox for hitbox settings

local HitboxTabbox = GPOTab:AddLeftTabbox('Hitbox')

-- Add a tab to the hitbox tabbox for hitbox settings

local HitboxTab = HitboxTabbox:AddTab('Hitbox Settings')

-- Add a textbox to enter hitbox size

local HitboxInput = HitboxTab:AddInput('HitboxInput', {
    Default = '5',
    Numeric = true,
    Finished = false,
    Text = 'Enter Hitbox Size',
    Tooltip = 'Set the hitbox size for other players',
})

-- Add a button to apply hitbox size and render through walls

HitboxTab:AddButton('Apply Hitbox (ESP)', function()
    local size = HitboxInput.Value
    _G.HeadSize = tonumber(size)
    for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            pcall(function()
                local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    rootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                    rootPart.Transparency = 0.7
                    rootPart.BrickColor = BrickColor.new("Really blue")
                    rootPart.Material = "Neon"
                    rootPart.CanCollide = false
                end
            end)
        end
    end
end)

-- Add a tabbox for ESP settings

local ESPTabbox = GPOTab:AddRightTabbox('ESP')

-- Add a tab to the ESP tabbox for ESP settings

local ESPTab = ESPTabbox:AddTab('ESP Settings')

-- Add a toggle to enable/disable ESP

local EnableESP = ESPTab:AddToggle('EnableESP', {
    Text = 'Enable ESP',
    Default = false,
    Tooltip = 'Toggle ESP to locate players',
   
})

-- Function to create ESP for players

local function createESP(player)
    if player.Character and not player.Character:FindFirstChild("ESPBox") then
        local box = Instance.new("BoxHandleAdornment")
        box.Name = "ESPBox"
        box.Adornee = player.Character:WaitForChild("HumanoidRootPart")
        box.AlwaysOnTop = true
        box.ZIndex = 5
        box.Size = player.Character.HumanoidRootPart.Size + Vector3.new(1, 1, 1)
        box.Transparency = 0.7
        box.Color3 = Color3.new(1, 0, 0) -- Red color
        box.Parent = player.Character.HumanoidRootPart
    end
end

-- Function to remove ESP from players

local function removeESP(player)
    if player.Character and player.Character:FindFirstChild("ESPBox") then
        player.Character:FindFirstChild("ESPBox"):Destroy()
    end
end

-- Update ESP for all players based on the toggle state

EnableESP:OnChanged(function()
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if EnableESP.Value then
            createESP(player)
        else
            removeESP(player)
        end
    end
end)

-- Update ESP for new players

game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if EnableESP.Value then
            createESP(player)
        end
    end)
end)

-- Remove ESP for players who leave

game:GetService("Players").PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- Add ThemeManager and SaveManager

local SettingsTab = Window:AddTab('Settings')

ThemeManager:SetLibrary(Library)

SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()

SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

ThemeManager:SetFolder('MyScriptHub')

SaveManager:SetFolder('MyScriptHub/settings')

ThemeManager:ApplyToTab(SettingsTab)

SaveManager:BuildConfigSection(SettingsTab)

-- Add a keybind to toggle the main GUI

Library.ToggleKeybind = Enum.KeyCode.H

-- Add a keybind to apply saved theme settings

SettingsTab:AddButton('Apply Saved Themes', function()
    SaveManager:LoadAutoloadConfig()
end)

-- Initialize the GUI

Library:Notify('GUI Initialized', 5)

Library:ToggleUI()
