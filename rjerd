loadstring(game:HttpGet('https://raw.githubusercontent.com/Yuzei03/erujrej/main/erjnmmnj'))()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local leftFoot = character:WaitForChild("LeftFoot")
local rightFoot = character:WaitForChild("RightFoot")

-- Create parts to represent the feet
local leftBrickPart = Instance.new("Part")
leftBrickPart.Size = Vector3.new(2, 0.2, 2) -- Adjust size as needed
leftBrickPart.BrickColor = BrickColor.new("Bright blue")
leftBrickPart.Anchored = true
leftBrickPart.CanCollide = true -- Start with collidable
leftBrickPart.Transparency = 0.5
leftBrickPart.Parent = leftFoot

local rightBrickPart = Instance.new("Part")
rightBrickPart.Size = Vector3.new(2, 0.2, 2) -- Adjust size as needed
rightBrickPart.BrickColor = BrickColor.new("Bright red")
rightBrickPart.Anchored = true
rightBrickPart.CanCollide = true -- Start with collidable
rightBrickPart.Transparency = 0.5
rightBrickPart.Parent = rightFoot

-- Function to continuously update brick positions
local function updateBrickPositions()
    while true do
        if leftBrickPart.Parent == leftFoot then
            leftBrickPart.CFrame = leftFoot.CFrame * CFrame.new(0, -leftFoot.Size.Y / 2, 0)
        end
        if rightBrickPart.Parent == rightFoot then
            rightBrickPart.CFrame = rightFoot.CFrame * CFrame.new(0, -rightFoot.Size.Y / 2, 0)
        end
        wait(0.1) -- Adjust as needed for smoothness
    end
end

-- Start position update function in a separate thread
spawn(updateBrickPositions)

-- GUI for toggling collision
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 150) -- Adjust size as needed
frame.Position = UDim2.new(1, -220, 0, 20) -- Upper-right corner
frame.BackgroundColor3 = Color3.fromRGB(34, 34, 34) -- Dark background color
frame.BorderSizePixel = 0 -- No border
frame.AnchorPoint = Vector2.new(1, 0) -- Anchor point
frame.Visible = true -- Initially show the frame
frame.Parent = screenGui

-- Apply roundness to the frame
local round = Instance.new("UICorner")
round.CornerRadius = UDim.new(0, 10)
round.Parent = frame

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 50)
toggleButton.Position = UDim2.new(0.5, -75, 0.5, -25)
toggleButton.Text = "Turn ON/OFF"
toggleButton.Font = Enum.Font.SourceSans
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleButton.TextSize = 18
toggleButton.Parent = frame

-- Function to toggle brick parts
local function toggleBricks()
    if leftBrickPart and rightBrickPart then
        leftBrickPart.CanCollide = not leftBrickPart.CanCollide
        rightBrickPart.CanCollide = not rightBrickPart.CanCollide
    end
end

-- Connect the toggle button to the function
toggleButton.MouseButton1Click:Connect(function()
    toggleBricks()
end)

-- Toggle bricks when 'P' key is pressed
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.P then
        frame.Visible = not frame.Visible
    end
end)


-- Start the function in a separate thread
spawn(keepFeetOnGround)

-- Create the blur effect
local blurEffect = Instance.new("BlurEffect")
blurEffect.Size = 24
blurEffect.Parent = game.Lighting

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the Welcome TextLabel
local welcomeLabel = Instance.new("TextLabel")
welcomeLabel.Size = UDim2.new(1, 0, 0.25, 0) -- Adjusted to take one-fourth of the screen height
welcomeLabel.BackgroundTransparency = 1
welcomeLabel.Font = Enum.Font.Gotham -- Gotham is a clean, sans-serif font similar to Noto Sans
welcomeLabel.Text = "Welcome To Zero Hub"
welcomeLabel.TextColor3 = Color3.new(1, 1, 1) -- White text color
welcomeLabel.TextScaled = true
welcomeLabel.TextSize = 48 -- Set a smaller text size
welcomeLabel.Parent = screenGui

-- Create the Username TextLabel
local usernameLabel = Instance.new("TextLabel")
usernameLabel.Size = UDim2.new(1, 0, 0.25, 0) -- Adjusted to take one-fourth of the screen height
usernameLabel.Position = UDim2.new(0, 0, 0.25, 0) -- Positioned below the welcome message
usernameLabel.BackgroundTransparency = 1
usernameLabel.Font = Enum.Font.Gotham -- Gotham is a clean, sans-serif font similar to Noto Sans
usernameLabel.Text = game.Players.LocalPlayer.Name
usernameLabel.TextColor3 = Color3.new(1, 1, 1) -- White text color
usernameLabel.TextScaled = true
usernameLabel.TextSize = 48 -- Set a smaller text size
usernameLabel.Parent = screenGui


-- TweenService for smooth transition
local tweenService = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local tween = tweenService:Create(welcomeLabel, tweenInfo, {TextTransparency = 1})
local tweenUsername = tweenService:Create(usernameLabel, tweenInfo, {TextTransparency = 1})
local tweenMadeBy = tweenService:Create(madeByLabel, tweenInfo, {TextTransparency = 1})
local tweenInit = tweenService:Create(initializingLabel, tweenInfo, {TextTransparency = 1})

-- Function to remove the welcome screen and blur effect
local function removeWelcomeScreen()
    tween:Play()
    tweenUsername:Play()
    tweenMadeBy:Play()
    tweenInit:Play()
    tween.Completed:Connect(function()
        screenGui:Destroy()
        blurEffect:Destroy()
    end)
end

-- Wait for 3 seconds before removing the welcome screen
wait(3)
removeWelcomeScreen()

