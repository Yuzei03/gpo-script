local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/Library.lua"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/SaveManager.lua"))()

-- Create the main window
local Window = Library:CreateWindow({
    Title = 'ZeroHuB',
    Center = true,
    AutoShow = true,
})

-- Create a tab named "Main"
local MainTab = Window:AddTab('Main')

-- Add a tabbox for speed settings within the "Main" tab
local SpeedTabbox = MainTab:AddLeftTabbox('Speed')

-- Add a tab to the tabbox for speed settings
local SpeedTab = SpeedTabbox:AddTab('Speed Settings')

-- Add a textbox to enter speed
local SpeedInput = SpeedTab:AddInput('SpeedInput', {
    Default = '16',
    Numeric = true,
    Finished = false,
    Text = 'Enter Speed',
    Tooltip = 'Set your character speed',
})

-- Add a button to apply speed
SpeedTab:AddButton('Apply Speed', function()
    local speed = SpeedInput.Value
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = tonumber(speed)

    -- Persist the speed in a global variable
    _G.WalkSpeed = tonumber(speed)
end)

-- Create a small button to show the GUI when it's hidden
local ShowButton

-- Function to hide the main GUI and show the small button
local function hideMainGUI()
    Library:Unload()
    if not ShowButton then
        ShowButton = Instance.new("TextButton")
        ShowButton.Size = UDim2.new(0, 100, 0, 30)
        ShowButton.Position = UDim2.new(0, 10, 0, 10)
        ShowButton.Text = "Show GUI"
        ShowButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        ShowButton.MouseButton1Click:Connect(function()
            ShowButton:Destroy()
            ShowButton = nil
            loadstring(game:HttpGet('https://raw.githubusercontent.com/Yuzei03/gpo-script/main/rjerd'))()
        end)
    end
end

-- Add a button to hide the GUI
SpeedTab:AddButton('Hide GUI', hideMainGUI)

-- Add a tabbox for hitbox settings
local HitboxTabbox = MainTab:AddLeftTabbox('Hitbox')

-- Add a tab to the hitbox tabbox for hitbox settings
local HitboxTab = HitboxTabbox:AddTab('Hitbox Settings')

-- Add a textbox to enter hitbox size
local HitboxInput = HitboxTab:AddInput('HitboxInput', {
    Default = '5',
    Numeric = true,
    Finished = false,
    Text = 'Enter Hitbox Size',
    Tooltip = 'Set the hitbox size for other players',
})

-- Add a button to apply hitbox size and render through walls
HitboxTab:AddButton('Apply Hitbox (ESP)', function()
    local size = HitboxInput.Value
    _G.HeadSize = tonumber(size)
    for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            pcall(function()
                local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    rootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                    rootPart.Transparency = 0.7
                    rootPart.BrickColor = BrickColor.new("Really blue")
                    rootPart.Material = "Neon"
                    rootPart.CanCollide = false
                end
            end)
        end
    end
end)

-- Add a tabbox for ESP settings
local ESPTabbox = MainTab:AddRightTabbox('ESP')

-- Add a tab to the ESP tabbox for ESP settings
local ESPTab = ESPTabbox:AddTab('ESP Settings')

-- Add a toggle to enable/disable ESP
local EnableESP = ESPTab:AddToggle('EnableESP', {
    Text = 'Enable ESP',
    Default = false,
    Tooltip = 'Toggle ESP to locate players',
})

-- Function to create ESP for players
local function createESP(player)
    if player.Character and not player.Character:FindFirstChild("ESPBox") then
        local box = Instance.new("BoxHandleAdornment")
        box.Name = "ESPBox"
        box.Adornee = player.Character:WaitForChild("HumanoidRootPart")
        box.AlwaysOnTop = true
        box.ZIndex = 5
        box.Size = player.Character.HumanoidRootPart.Size + Vector3.new(1, 1, 1)
        box.Transparency = 0.7
        box.Color3 = Color3.new(1, 0, 0) -- Red color
        box.Parent = player.Character.HumanoidRootPart
    end
end

-- Function to remove ESP from players
local function removeESP(player)
    if player.Character and player.Character:FindFirstChild("ESPBox") then
        player.Character:FindFirstChild("ESPBox"):Destroy()
    end
end

-- Toggle ESP functionality
EnableESP:OnChanged(function()
    if EnableESP.Value then
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createESP(player)
            end
        end
        game:GetService('Players').PlayerAdded:Connect(function(player)
            if player ~= game.Players.LocalPlayer then
                player.CharacterAdded:Connect(function()
                    createESP(player)
                end)
            end
        end)
    else
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                removeESP(player)
            end
        end
    end
end)

-- Add a tabbox for Fly settings aligned with ESP on the right side
local FlyTabbox = ESPTabbox:AddRightTabbox('Fly')

-- Add a tab to the Fly tabbox for Fly settings
local FlyTab = FlyTabbox:AddTab('Fly Settings')

-- Add a button to toggle Fly
FlyTab:AddButton('Toggle Fly', function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoid = character and character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.PlatformStand = not humanoid.PlatformStand
    end
end)

-- Replace ESP functionality with rendering through walls
_G.HeadSize = 5
_G.Disabled = true

game:GetService('RunService').RenderStepped:Connect(function()
    if _G.Disabled then
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        rootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                        rootPart.Transparency = 0.7
                        rootPart.BrickColor = BrickColor.new("Really blue")
                        rootPart.Material = "Neon"
                        rootPart.CanCollide = false
                    end
                end)
            end
        end
    end
end)

-- Apply initial settings and start maintaining speed
Library:SetWatermarkVisibility(true)
Library:SetWatermark('GPO BR')

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

ThemeManager:ApplyToTab(Window)
SaveManager:LoadAutoloadConfig()

local function maintainSpeed()
    while true do
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid and _G.WalkSpeed then
                if humanoid.WalkSpeed ~= _G.WalkSpeed then
                    humanoid.WalkSpeed = _G.WalkSpeed
                end
            end
        end
        wait(1) -- Check every second
    end
end

spawn(maintainSpeed)  -- Start maintaining speed in a separate thread

-- Ensure GUI starts as visible
Window:SetVisible(true)
